from sympy import isprime, prime

flag = '<REDACTED>'

if __name__ == "__main__":
    # 1) perform ord of each character of the flag
    yy = [ord(i) for i in flag]

    # 2) compute bitwise xor of the integer representation of each character
    ww = [(prime(j)^0x1337) if isprime(j) else (j^0x1337) for j in yy]
    
    # 3) return the binary representation integer of the resulting number getting rid of '0b' prefix
    zz = [int(bin(k)[2:]) for k in ww]

    print(zz)

'''
 OUTPUT :
[1001100000110, 1001100000100, 1001100000100, 1001100000000, 1001101100010, 1001101100111, 1001101001100, 1001101001111, 1001100000111, 1001101000101, 1001101101000, 1001100000011, 1001101011001, 1001101110011, 1001101101000, 1001101110101, 1001101011110, 1001101011001, 1001100000011, 1001011001010, 1001101100101, 1001101001110, 1001101101000, 1001101110010, 1001101011001, 1001001111100, 1001100000111, 1001101010011, 1001100000100, 1001101000101, 1001101101000, 1001100000011, 1001101000101, 1001100000100, 1001101101000, 1001101000011, 1001101111111, 1001100000100, 1001101101000, 1001101100000, 1001100000100, 1001100000011, 1000101111100, 1001100000100, 1001111000110, 1001101000011, 1001101101000, 1001100001111, 1001100000111, 1001100000000, 1001100001110, 1001100000111, 1001100000000, 1001111000110, 1001100000001, 1001101001010]
'''